% Generated by roxygen2 (4.1.0.9001): do not edit by hand
% Please edit documentation in R/PPfclassify.R
\name{PPPfclassify}
\alias{PPPfclassify}
\title{predict projection pursuit classification tree}
\usage{
PP.classify(Tree.result, test.data, Rule, true.class=NULL,...)
}
\arguments{
  \item{Tree.result}{PPtreeclass object} \item{test.data}
  {the test dataset} \item{Rule}{split rule 1: mean of two
  group means 2: weighted mean of two group means - weight
  with group size 3: weighted mean of two group means -
  weight with group sd 4: weighted mean of two group means
  - weight with group se 5: mean of two group medians 6:
  weighted mean of two group medians - weight with group
  size 7: weighted mean of two group median - weight with
  group IQR 8: weighted mean of two group median - weight
  with group IQR and size 9: cutoff that minimize error
  rates in each node} \item{true.class}{true class of test
  dataset if available} \item{...}{arguments to be passed to
  methods}
}
\value{
predict.class predicted class predict.error number of the
prediction errors
}
\description{
Predict class for the test set and calculate prediction
error. After finding tree structure, predict class for the
test set and calculate prediction error.
}
\examples{
data(iris)
iris.sc <- data.frame(class = iris[, 5], scale(iris[, 1:4]))
training <- train_fn(class=iris[, 5] , size.p = 2/3)
Tree.result <- PPtree_split(as.formula('class~.'), data=iris.sc[training$id,] ,  size.p=0.9)
PP.classify(Tree.result, iris.sc[-training$id, 2:5], 1, iris.sc[-training$id, 1])
}

